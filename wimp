#!/bin/sh

# creates the src directory where markdown files and subdirectories are modified, watched
wimp_create_directories() {
  mkdir ./src/; mkdir ./includes/; mkdir ./public/; touch ./includes/head.html
  touch ./includes/before.html; touch ./includes/after.html
}
# checks if the watch function is going to be run on startup using systemd
#TODO bug to fix here with path of script
#TODO check if file exists before doing this whole thing
#TODO change this so that it works with multiple directories
wimp_create_daemon() {
  touch /etc/systemd/system/wimp.service
  echo "[Unit]
Description=Run wimp website generator

[Service]
Type=simple
RemainAfterExit=yes
ExecStart=$(pwd)/wimp
TimeoutStartSec=0

[Install]
WantedBy=default.target" > /etc/systemd/system/wimp.service
  systemctl daemon-reload
  systemctl enable wimp.service
}
# compiles mardown file in src to html file in public using pandoc
wimp_compile() {
  sh -c 'outpath="${0%.md}.html"; outpath="./public/${outpath##*src/}"; \
if ! [ -d "${outpath%/*}" ]; then mkdir "${outpath%/*}"; fi; \
pandoc -s "$0" -H includes/head.html -B includes/before.html \
-A includes/after.html -o $outpath' "$@"
}
# compiles all markdown files in src into html files in public using pandoc
wimp_compile_all() {
  # TODO make the deletion of everything in public optional
  rm -rf ./public/*
  find ./src/ -name '*.md' -type f -exec sh -c 'outpath="${0%.md}.html";\
outpath="./public/${outpath##*src/}"; if ! [ -d "${outpath%/*}" ]; then \
mkdir "${outpath%/*}"; fi; pandoc -s "$0" -H includes/head.html \
-B includes/before.html -A includes/after.html -o $outpath' {} \;
}
# launches inotifywait to watch for writes to src files in order to compile them to html
wimp_watch() {
  inotifywait -qmre modify --format "%w%f" ./src/ |\
  while read filepath;
  do
    wimp_compile $filepath
  done &
}
# initializes the current directory for wimp, calls create_directories and create_daemon
# then runs watch in the background
wimp_init() {
  wimp_create_directories
  wimp_create_daemon
  wimp_watch
}
wimp_clean() {
  rm -rf ./src; rm -rf ./public; rm -rf ./includes
}

# BELOW, the interface for the script defined
if [ $# -eq 0 ]
then
  echo "TODO: program in default behaviour here"
  # check if src/ includes/ and public/ directories exist
  # if not, run init
  # check if watch runs on startup
  # if not, setup systemd to run watch on startup
  # run watch
else
  cmd=$1 shift
  
  case $cmd in
    (init) wimp_init ;;
    (watch) wimp_watch ;;
    (compile) wimp_compile $@;;
    (compile-all) wimp_compile_all ;;
    (clean) wimp_clean ;;
    (help) echo "The WIMP leverages pandoc and inotify to dynamically manage a \
static website";;
    (*) echo -e "UNRECOGNIZED COMMAND\n(run \`wimp help\` for more information)" ;;
  esac
fi

#!/bin/sh

# from Charles Duffy on stackoverflow, thanks Charles!
run_escalated_function() {
  local function_name args_q
  function_name=$1; shift || return
  printf -v args_q '%q ' "$@"
  sudo bash -c "$(declare -f "$function_name"); $function_name $args_q"
}

wimp_init() {
  if [ -d "$wimp_dir" ]; then
    echo "This directory is already watched by a wimp"
  elif [[ -n $(find . -type d -name ".wimp") ]]; then
    echo "This directory already contains a wimp"
  else
    mkdir -p src template public .wimp
  fi
}

wimp_compile() {
  #TODO make sure this uses template dynamically
  sh -c 'outpath="${0%.md}.html"; outpath="./public/${outpath##*src/}"; \
if ! [ -d "${outpath%/*}" ]; then mkdir "${outpath%/*}"; fi; \
pandoc --quiet -s "$0" -H template/head.html -B template/before.html \
-A template/after.html -o $outpath' "$@"
}

wimp_compile_all() {
  #TODO make sure this uses template dynamically
  find $wimp_dir/../src/ -name '*.md' -type f -exec sh -c \
'outpath="${0%.md}.html"; outpath="./public/${outpath##*src/}"; \
if ! [ -d "${outpath%/*}" ]; then mkdir "${outpath%/*}"; fi; \
pandoc --quiet -s "$0" -H template/head.html -B template/before.html \
-A template/after.html -o $outpath' {} \;
}

wimp_watch() {
  echo "TODO"
}

wimp_stop() {
  echo "TODO"
}

wimp_clean() {
  rm -rf $wimp_dir/../src $wimp_dir/../public $wimp_dir/../template $wimp_dir
}

# from Jeff Schaller on stackoverflow, thanks Jeff!
find_config() {
  if [ -d "$1" ]; then
    echo "${PWD%/}/$1"
  elif [ "$PWD" = / ]; then
    false
  else
    (cd .. && find_config "$1") # subshell so we don't affect caller's $PWD
  fi
}

validate() {
  if [ ! -d "$wimp_dir" ]; then
    echo -e "This directory is not watched by a wimp\n(run \`wimp init\`)"; exit
  fi
}

wimp_dir="$(find_config ".wimp")"
if [ $# -eq 0 ]
then
  echo "TODO, put here the help message"
else
  cmd=$1 shift
  case $cmd in
    (init) wimp_init ;;
    (watch) validate; wimp_watch ;;
    (compile) validate; wimp_compile $@;;
    (compile-all) validate; wimp_compile_all ;;
    (stop) validate; wimp_stop ;;
    (clean) validate; wimp_clean ;;
    (help) echo "The WIMP leverages pandoc and inotify to dynamically manage a \
static website";;
    (*) echo -e "UNRECOGNIZED COMMAND\nusage: wimp <command>\n(run \`wimp help\` for more information)" ;;
  esac
fi
